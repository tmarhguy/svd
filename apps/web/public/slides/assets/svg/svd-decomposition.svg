<svg width="800" height="400" viewBox="0 0 800 400" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <!-- Gradients for sci-fi theme -->
    <linearGradient id="matrixGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#0ea5e9;stop-opacity:0.8" />
      <stop offset="100%" style="stop-color:#8b5cf6;stop-opacity:0.6" />
    </linearGradient>
    
    <linearGradient id="textGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#0ea5e9" />
      <stop offset="50%" style="stop-color:#8b5cf6" />
      <stop offset="100%" style="stop-color:#10b981" />
    </linearGradient>
    
    <!-- Glow filter -->
    <filter id="glow">
      <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
      <feMerge> 
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    
    <!-- Animation definitions -->
    <style type="text/css">
      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }
      
      @keyframes slideIn {
        from { transform: translateX(-50px); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
      }
      
      @keyframes pulse {
        0%, 100% { opacity: 0.7; }
        50% { opacity: 1; }
      }
      
      @keyframes matrixGlow {
        0%, 100% { filter: brightness(1); }
        50% { filter: brightness(1.3); }
      }
      
      .matrix-cell {
        fill: url(#matrixGradient);
        stroke: #0ea5e9;
        stroke-width: 1;
        animation: matrixGlow 3s ease-in-out infinite;
      }
      
      .matrix-label {
        font-family: 'Inter', sans-serif;
        font-size: 16px;
        font-weight: bold;
        fill: url(#textGradient);
        filter: url(#glow);
      }
      
      .math-text {
        font-family: 'Times New Roman', serif;
        font-size: 18px;
        fill: #f59e0b;
        font-weight: bold;
      }
      
      .arrow {
        stroke: #10b981;
        stroke-width: 3;
        marker-end: url(#arrowhead);
        animation: pulse 2s ease-in-out infinite;
      }
      
      .step-label {
        font-family: 'Inter', sans-serif;
        font-size: 14px;
        fill: #e2e8f0;
        text-anchor: middle;
        dominant-baseline: middle;
      }
    </style>
    
    <!-- Arrow marker -->
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
            refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#10b981" />
    </marker>
  </defs>
  
  <!-- Background -->
  <rect width="800" height="400" fill="#0f172a" opacity="0.1"/>
  
  <!-- Title -->
  <text x="400" y="30" class="matrix-label" text-anchor="middle" font-size="24">
    Singular Value Decomposition
  </text>
  
  <!-- Original Matrix A -->
  <g transform="translate(50, 80)">
    <text x="0" y="-10" class="step-label">Original Matrix A</text>
    
    <!-- Matrix grid -->
    <g class="matrix-group">
      <rect x="0" y="0" width="120" height="80" fill="none" stroke="#0ea5e9" stroke-width="2" stroke-dasharray="5,5"/>
      
      <!-- Matrix cells with animation -->
      <rect x="10" y="10" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="35" y="10" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="60" y="10" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="85" y="10" width="20" height="15" class="matrix-cell" rx="2"/>
      
      <rect x="10" y="30" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="35" y="30" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="60" y="30" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="85" y="30" width="20" height="15" class="matrix-cell" rx="2"/>
      
      <rect x="10" y="50" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="35" y="50" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="60" y="50" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="85" y="50" width="20" height="15" class="matrix-cell" rx="2"/>
      
      <rect x="10" y="70" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="35" y="70" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="60" y="70" width="20" height="15" class="matrix-cell" rx="2"/>
      <rect x="85" y="70" width="20" height="15" class="matrix-cell" rx="2"/>
    </g>
    
    <text x="60" y="105" class="math-text" text-anchor="middle">A</text>
  </g>
  
  <!-- Arrow to SVD -->
  <line x1="200" y1="120" x2="250" y2="120" class="arrow"/>
  
  <!-- SVD Equation -->
  <g transform="translate(280, 80)">
    <text x="0" y="-10" class="step-label">SVD Decomposition</text>
    
    <!-- U Matrix -->
    <g transform="translate(0, 0)">
      <rect x="0" y="0" width="80" height="80" fill="none" stroke="#8b5cf6" stroke-width="2"/>
      <text x="40" y="105" class="math-text" text-anchor="middle">U</text>
    </g>
    
    <!-- × symbol -->
    <text x="100" y="50" class="math-text" font-size="24">×</text>
    
    <!-- Σ Matrix -->
    <g transform="translate(120, 0)">
      <rect x="0" y="0" width="80" height="80" fill="none" stroke="#f59e0b" stroke-width="2"/>
      <!-- Diagonal elements -->
      <rect x="10" y="10" width="15" height="15" fill="#f59e0b" opacity="0.8"/>
      <rect x="30" y="30" width="15" height="15" fill="#f59e0b" opacity="0.8"/>
      <rect x="50" y="50" width="15" height="15" fill="#f59e0b" opacity="0.8"/>
      <rect x="70" y="70" width="15" height="15" fill="#f59e0b" opacity="0.8"/>
      <text x="40" y="105" class="math-text" text-anchor="middle">Σ</text>
    </g>
    
    <!-- × symbol -->
    <text x="220" y="50" class="math-text" font-size="24">×</text>
    
    <!-- V^T Matrix -->
    <g transform="translate(240, 0)">
      <rect x="0" y="0" width="80" height="80" fill="none" stroke="#10b981" stroke-width="2"/>
      <text x="40" y="105" class="math-text" text-anchor="middle">V^T</text>
    </g>
  </g>
  
  <!-- Arrow to Rank-k -->
  <line x1="430" y1="120" x2="480" y2="120" class="arrow"/>
  
  <!-- Rank-k Approximation -->
  <g transform="translate(500, 80)">
    <text x="0" y="-10" class="step-label">Rank-k Approximation</text>
    
    <!-- U_k Matrix -->
    <g transform="translate(0, 0)">
      <rect x="0" y="0" width="60" height="80" fill="none" stroke="#8b5cf6" stroke-width="2" stroke-dasharray="3,3"/>
      <text x="30" y="105" class="math-text" text-anchor="middle">U_k</text>
    </g>
    
    <!-- × symbol -->
    <text x="80" y="50" class="math-text" font-size="24">×</text>
    
    <!-- Σ_k Matrix -->
    <g transform="translate(100, 0)">
      <rect x="0" y="0" width="60" height="60" fill="none" stroke="#f59e0b" stroke-width="2" stroke-dasharray="3,3"/>
      <!-- Only top k diagonal elements -->
      <rect x="10" y="10" width="15" height="15" fill="#f59e0b" opacity="0.8"/>
      <rect x="30" y="30" width="15" height="15" fill="#f59e0b" opacity="0.8"/>
      <text x="30" y="105" class="math-text" text-anchor="middle">Σ_k</text>
    </g>
    
    <!-- × symbol -->
    <text x="180" y="50" class="math-text" font-size="24">×</text>
    
    <!-- V_k^T Matrix -->
    <g transform="translate(200, 0)">
      <rect x="0" y="0" width="60" height="80" fill="none" stroke="#10b981" stroke-width="2" stroke-dasharray="3,3"/>
      <text x="30" y="105" class="math-text" text-anchor="middle">V_k^T</text>
    </g>
  </g>
  
  <!-- Mathematical Formula -->
  <g transform="translate(400, 200)">
    <text x="0" y="0" class="math-text" text-anchor="middle" font-size="20">
      A = UΣV^T → A_k = U_k Σ_k V_k^T
    </text>
  </g>
  
  <!-- Storage Comparison -->
  <g transform="translate(400, 250)">
    <text x="0" y="0" class="step-label" font-size="16">
      Storage: mn → k(m+n+1)
    </text>
  </g>
  
  <!-- Compression Ratio -->
  <g transform="translate(400, 280)">
    <text x="0" y="0" class="step-label" font-size="14" fill="#10b981">
      Compression Ratio: ~77% for k=30
    </text>
  </g>
  
  <!-- Animated elements -->
  <g>
    <!-- Pulsing dots to show data flow -->
    <circle cx="200" cy="120" r="3" fill="#10b981" opacity="0.8">
      <animate attributeName="opacity" values="0.3;1;0.3" dur="2s" repeatCount="indefinite"/>
    </circle>
    <circle cx="430" cy="120" r="3" fill="#10b981" opacity="0.8">
      <animate attributeName="opacity" values="0.3;1;0.3" dur="2s" repeatCount="indefinite" begin="0.5s"/>
    </circle>
  </g>
</svg>
